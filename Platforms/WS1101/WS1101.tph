'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'			WS1101
'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

#define __notdl

#define PLATFORM_ID 45

#define BUFF_PAGE_TYPE word
#define BUFF_SIZE_TYPE dword
#define EXTENDED_SOCK 1
#define SER_7BIT_LIMITATION 1
#define PLATFORM_TYPE_32 1
#define OBJECT_KP KP_ENABLED
#define OBJECT_FD FD_ENABLED
#define OBJECT_WLN WLN_ENABLED
#define OBJECT_BT BT_ENABLED
#define OBJECT_LCD LCD_ENABLED
#define COPY_FIRMWARE 1
#define EXTENDED_FD 1


'--------------------------------------------------------------------
#if OBJECT_FD=FD_ENABLED
	#define __cfgstr "<FD>"
#endif

'--------------------------------------------------------------------
enum pl_sock_interfaces
	PL_SOCK_INTERFACE_NULL,		'<b>PLATFORM CONSTANT.</b><br><br>Null interface (no connection possible).
	PL_SOCK_INTERFACE_NET,		'<b>PLATFORM CONSTANT.</b><br><br>Ethernet interface.
	PL_SOCK_INTERFACE_WLN,		'<b>PLATFORM CONSTANT.</b><br><br>Wi-Fi interface.
	PL_SOCK_INTERFACE_PPP=3,	'<b>PLATFORM CONSTANT.</b><br><br>PPP interface on a serial port.
	PL_SOCK_INTERFACE_PPPOE		'<b>PLATFORM CONSTANT.</b><br><br>PPPoE interface.
end enum

'--------------------------------------------------------------------
enum pl_io_num 
	PL_IO_NUM_0_RX0,	'<b>PLATFORM CONSTANT.</b><br><br> 
				'General-purpose I/O line 0 (P0.0), also the RX/W1in/din input of serial port 0.<br><br>
				'When this serial port is in UART mode (<font color="maroon"><b>ser.mode</b></font> = <font color="olive"><b>0- PL_SER_MODE_UART </b></font>) 
				'and is enabled (<font color="maroon"><b>ser.enabled</b></font> = <font color="olive"><b>1- YES</b></font>),
				'the line is automatically configured to be an input. Line configuration is still "manual" in all other cases.<br><br>
				'Closing the serial port or changing its mode restores the output buffer's original configuration.

	PL_IO_NUM_1_TX0,'<b>PLATFORM CONSTANT.</b><br><br> 
				'General-purpose I/O line 1 (P0.1), also the TX/W1out/dout output of serial port 0.<br><br>
				'When this serial port is in UART mode (<font color="maroon"><b>ser.mode</b></font> = <font color="olive"><b>0- PL_SER_MODE_UART </b></font>) 
				'and is enabled (<font color="maroon"><b>ser.enabled</b></font> = <font color="olive"><b>1- YES</b></font>),
				'the line is automatically configured to be an output. Line configuration is still "manual" in all other cases.<br><br>
				'Closing the serial port or changing its mode restores the output buffer's original configuration. 

	PL_IO_NUM_2_CTS_INT0,	'<b>PLATFORM CONSTANT.</b><br><br> 
				'General-purpose I/O line 2 (P0.2), also the interrupt line 0. In RS232 and RS422 mode this line is used as serial CTS input. 
				'This line is not used in RS485 (half-duplex) mode. 

	PL_IO_NUM_3_RTS_INT1,	'<b>PLATFORM CONSTANT.</b><br><br> 
				'General-purpose I/O line 3 (P0.3), also the interrupt line 1.	In RS232 and RS422 mode this line is used as serial RTS output. 
				'This line is used in RS485 (half-duplex) mode as direction control. 

	PL_IO_NUM_4,	'<b>PLATFORM CONSTANT. </b><br><br>
				'Not implemented.

	PL_IO_NUM_5_EXPANDER_SCL,	'<b>PLATFORM CONSTANT.</b><br><br>
				'General-purpose I/O line 5 (P0.5). This line is used as SCL in I2C communications with an MCP23008 IO expander. This IO expander is used to control 
				'the wireless signal LEDs and the current serial port mode of the hardware. 

	PL_IO_NUM_6_EXPANDER_SDA,	'<b>PLATFORM CONSTANT.</b><br><br>
				'General-purpose I/O line 6 (P0.6). This line is used as SDA in I2C communications with an MCP23008 IO expander. This IO expander is used to control 
				'the wireless signal LEDs and the current serial port mode of the hardware. 

	PL_IO_NUM_7_RX1_DSR,	'<b>PLATFORM CONSTANT.</b><br><br> 
				'General-purpose I/O line 7 (P0.7) also the RX/W1in/din input of serial port 1 or RX of the debug serial port.<br><br>
				'When this serial port is in UART mode (<font color="maroon"><b>ser.mode</b></font> = <font color="olive"><b>0- PL_SER_MODE_UART </b></font>) 
				'and is enabled (<font color="maroon"><b>ser.enabled</b></font> = <font color="olive"><b>1- YES</b></font>),
				'the line is automatically configured to be an input. Line configuration is still "manual" in all other cases.<br><br>
				'Closing the serial port or changing its mode restores the output buffer's original configuration. 

	PL_IO_NUM_8_TX1_DTR,	'<b>PLATFORM CONSTANT.</b><br><br> 
				'General-purpose I/O line 8 (P1.0), also the TX/W1out/dout output of serial port 1 or TX of the debug serial port.<br><br>
				'When this serial port is in UART mode (<font color="maroon"><b>ser.mode</b></font> = <font color="olive"><b>0- PL_SER_MODE_UART </b></font>) 
				'and is enabled (<font color="maroon"><b>ser.enabled</b></font> = <font color="olive"><b>1- YES</b></font>),
				'the line is automatically configured to be a n output. Line configuration is still "manual" in all other cases.<br><br>
				'Closing the serial port or changing its mode restores the output buffer's original configuration. 

	PL_IO_NUM_9_BUZZER,	'<b>PLATFORM CONSTANT.</b><br><br>
				'General-purpose I/O line 9 (P1.1). This output is driving a buzzer. 

	PL_IO_NULL		'<b>PLATFORM CONSTANT.</b><br><br>
				'This is a NULL line that does not physically exist.
				'The state of this line is always detected as LOW. Setting this line has no effect.
end enum

'--------------------------------------------------------------------
enum pl_io_port_num
	PL_IO_PORT_NUM_0,	'<b>PLATFORM CONSTANT.</b><br><br> 
				'8-bit port 0, contains I/O lines 0-7. This is a virtual port.<br><br>
				'During reads (io.portget, io.portstate(g)) and writes (io.portset, io.portstate(s)), each one of the port's eight lines is handled individually,
				'starting with line 0 and ending with line 7. Hence, there is a small rolling delay in state writing and reading.

	PL_IO_PORT_NUM_1	'<b>PLATFORM CONSTANT.</b><br><br> 
				'8-bit port 1, contains I/O lines 8-11. This is a virtual port.<br><br>
				'During reads (io.portget, io.portstate(g)) and writes (io.portset, io.portstate(s)), each one of the port's four lines is handled individually,
				'starting with line 0 and ending with line 1. Hence, there is a small rolling delay in state writing and reading.
end enum

'--------------------------------------------------------------------
enum pl_int_num 
	PL_INT_NUM_0,		'<b>PLATFORM CONSTANT.</b><br><br> 
				'Interrupt line 0 (mapped to GPIO line 2).

	PL_INT_NUM_1,		'<b>PLATFORM CONSTANT.</b><br><br> 
				'Interrupt line 1 (mapped to GPIO line 3).

	 
	PL_INT_NULL		'<b>PLATFORM CONSTANT.</b><br><br>
				'This is a NULL interrupt line that does not physically exist.
end enum

'--------------------------------------------------------------------
include "..\GEN.tph"
include "..\sys-2xxx.tph"
include "ws1101_ser.tph"
include "ws1101_sys.tph"
include "ws1101_wln.tph"
include "..\IO-1xxx.tph"

include "..\BEEP.tph"
include "..\BT.tph"
include "..\dhcp.tph"
include "..\FD.tph"
include "..\RTC.tph"
include "..\SSI.tph"
include "..\WLN.tph"
include "..\tls.tph"

